smallDataSet

1.0
Params: MAX_NUM_TAGS = 15
Runs: 500
Average: 0.80
Standard dev: 0.06
Min: 0.52
Max: 0.92

1.1 - title weighting
Params: MAX_NUM_TAGS = 10, Title weight = +3
Runs: 500
Average: 0.79
Standard dev: 0.06
Min: 0.43
Max: 0.94
Notes:
Title weighting hurt average accuracy

1.2 - n-grams with n = 2
Params: MAX_NUM_TAGS = 10, Title weight = 0, 2-gram weight = 2
Runs: 500
Average: 0.76
Standard dev: 0.07
Min: 0.53
Max: 0.92
Notes:
Why is n-grams hurting performance?!

1.3 - bug fixed in Category that wiped some user tags
Params: MAX_USER_TAGS = 10, MAX_DISCOVERED_TAGS = 10, Title weight = 0, 2-gram weight = 2, WEIGHT_FOR_USER_TAGS = 3/numUserTags
Average: 0.87
Standard dev: 0.02
Min: 0.81
Max: 0.94
Notes:
Fuck yeah.

1.4 - added back title weighting
Params: MAX_USER_TAGS = 10, MAX_DISCOVERED_TAGS = 10, Title weight = 3, 2-gram weight = 2, WEIGHT_FOR_USER_TAGS = 3/numUserTags
Average: 0.88
Standard dev: 0.02
Min: 0.84
Max: 0.95
Notes:
Marginal improvement! I knew title weighting was a good idea.

1.5 - domain matching
Params:
MAX_USER_TAGS = 10, MAX_DISCOVERED_TAGS = 10, Title weight = 3, 2-gram weight = 2, WEIGHT_FOR_USER_TAGS = 3/numUserTags,
WEIGHT_PER_MATCHED_DOMAIN = 0.01

Average: 0.88
Standard dev: 0.02
Min: 0.83
Max: 0.95
Notes:
For this data set, the major recurring domain was stackoverflow.com, an aggregate site. As such, stackoverflow docs belong
to different categories; thus domain matching did not help. For other data, I expect to domain matching to be a significant
boost to performance, probably prompting an increased WEIGHT_PER_MATCHED_DOMAIN.

1.5 - fixed bug in document term weighting that didn't count terms in title correctly
MAX_USER_TAGS = 10, MAX_DISCOVERED_TAGS = 10, Title weight = 3, 2-gram weight = 2, WEIGHT_FOR_USER_TAGS = 3/numUserTags,
WEIGHT_PER_MATCHED_DOMAIN = 0.01

Average accuracy: 0.87
Standard deviation: 0.01
Min accuracy: 0.84
Max accuracy: 0.90